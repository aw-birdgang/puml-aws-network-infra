@startuml VPC
' Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
' SPDX-License-Identifier: MIT (For details, see https://github.com/awslabs/aws-icons-for-plantuml/blob/master/LICENSE)

' Uncomment the line below for "dark mode" styling
' !$AWS_DARK = true

!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v18.0/dist
!include AWSPuml/AWSCommon.puml
!include AWSPuml/AWSSimplified.puml
!include AWSPuml/Compute/EC2.puml
!include AWSPuml/Compute/EC2Instance.puml
!include AWSPuml/Database/RDS.puml
!include AWSPuml/NetworkingContentDelivery/ElasticLoadBalancingApplicationLoadBalancer.puml
!include AWSPuml/Storage/SimpleStorageServiceBucketWithObjects.puml
!include AWSPuml/NetworkingContentDelivery/CloudFront.puml

!include AWSPuml/Groups/AWSCloud.puml
!include AWSPuml/Groups/VPC.puml
!include AWSPuml/Groups/AvailabilityZone.puml
!include AWSPuml/Groups/PublicSubnet.puml
!include AWSPuml/Groups/PrivateSubnet.puml
!include AWSPuml/NetworkingContentDelivery/VPCNATGateway.puml
!include AWSPuml/NetworkingContentDelivery/VPCInternetGateway.puml

' Hide stereotypes
hide stereotype

' Set line type to orthogonal
skinparam linetype ortho

AWSCloudGroup(cloud) {
  VPCGroup(vpc) {
    VPCInternetGateway(internet_gateway, "Internet gateway", "")

    AvailabilityZoneGroup(az_1, "\tAvailability Zone 1\t") {
        PublicSubnetGroup(az_1_public, "Public subnet a1") {
            VPCNATGateway(az_1_nat_gateway, "NAT gateway", "") #Transparent
            EC2Instance(az_1_bastion, "Bastion", "EC2 Instance") #Transparent
        }
        az_1_bastion <-> internet_gateway : "Connection to Internet Gateway"
    }

    AvailabilityZoneGroup(az_2, "\tAvailability Zone 2\t") {
        PublicSubnetGroup(az_2_public, "Public subnet c1") {
            EC2Instance(az_2_bastion, "Bastion", "EC2 Instance") #Transparent
            VPCNATGateway(az_2_nat_gateway, "NAT gateway", "") #Transparent
        }
        az_2_bastion <-> internet_gateway : "Connection to Internet Gateway"
    }

    az_2_nat_gateway ..> internet_gateway
    az_1_nat_gateway ..> internet_gateway
  }
}

' Define AWS Cloud Group for S3 and CloudFront
AWSCloudGroup(cloud_s3_cf) {
  ' Define S3 and CloudFront outside the VPC
  SimpleStorageServiceBucketWithObjects(s3_bucket, "S3 Bucket", "") #Transparent
  CloudFront(cloudfront, "CloudFront", "") #Transparent
  ' Connect S3 to CloudFront
  s3_bucket <--> cloudfront : "Content Delivery"
}

' Define Internet Group
package "Internet" {
  ' Define users accessing CloudFront from the internet
  node "Users" {
    cloudfront <--> "Users" : "Access Content"
  }
  ' Connect Internet to Internet Gateway
  internet_gateway <--> "Internet" : "Internet Access"
}

@enduml
